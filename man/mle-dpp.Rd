% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mle.R
\name{mle-dpp}
\alias{mle-dpp}
\alias{mle_dpp_gauss}
\alias{mle_dpp_bessel}
\title{Maximum Likelihood Estimator of Stationary Bivariate DPPs}
\usage{
mle_dpp_gauss(X, labels, lb = rep(-0.5, ncol(X)), ub = rep(0.5,
  ncol(X)), rho1 = NA, alpha1 = NA, rho2 = NA, alpha2 = NA,
  estimate_alpha = TRUE)

mle_dpp_bessel(X, lb = rep(0, ncol(X)), ub = rep(1, ncol(X)),
  estimate_rho = TRUE, init = NULL)
}
\arguments{
\item{X}{An n x d matrix storing n observed points in R^d.}

\item{labels}{An n-dimensional integer vector storing the labels of each
observed point.}

\item{lb}{A d-dimensional numeric vector storing the lower bounds of the
spatial domain (default: \code{rep(-0.5, ncol(X))}).}

\item{ub}{A d-dimensional numeric vector storing the upper bounds of the
spatial domain (default: \code{rep( 0.5, ncol(X))}).}

\item{rho1}{Value of the first intensity. If set, it requires toset also the
\code{alpha1} parameter.}

\item{alpha1}{Value of the first alpha If set to \code{NA} (default), the
parameter is estimated.}

\item{rho2}{Value of the second intensity. If set, it requires to set also
the \code{alpha2} parameter.}

\item{alpha2}{Value of the second alpha If set to \code{NA} (default), the
parameter is estimated.}

\item{estimate_alpha}{A boolean specifying whether the marginal alpha's
should be estimated (default: \code{TRUE}).}
}
\value{
A list as output from \code{\link[stats]{optim}}.
}
\description{
Maximum Likelihood Estimator of Stationary Bivariate DPPs
}
\examples{
dpp <- sim[[1]]
rho1 <- rho2 <- 100
alpha1 <- alpha2 <- 0.03
alpha12 <- 0.05
tau <- 0.2
rho12 <- tau * sqrt(rho1 * rho2)
d <- 2
mle_dpp_bessel(
  X = X,
  lb = rep(0, ncol(X)),
  ub = rep(1, ncol(X))
)

res <- lapply(sim, mle_dpp_bessel, lb = rep(0, ncol(X)), ub = rep(1, ncol(X)))
temp <- unlist(res)
par(mfrow = c(2, 2))
boxplot(temp[seq(2, 600, 6)], main = 'alpha1')
abline(h = 0.03)
boxplot(temp[seq(4, 600, 6)], main = 'alpha2')
abline(h = 0.03)
boxplot(temp[seq(5, 600, 6)], main = 'tau')
abline(h = 0.2)
boxplot(temp[seq(6, 600, 6)], main = 'alpha12')
abline(h = 0.05)
}
